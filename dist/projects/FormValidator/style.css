@import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');

:root {
  --success-color: #2ecc71;  /* css variables for input color when clicked. Look down for .form-control.success input */
  --error-color: #e74c3c;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #f9fafb;
  font-family: 'Open Sans', sans-serif;
  display: flex;     /* Every direct child of body will be flex item, in this case div=(container) */
  align-items: center;    /* align horizontaly in center */
  justify-content: center;   /* align horizontaly in center */
  min-height: 100vh;    /* align verticaly in center */
  margin: 0
}

.menu-btn {
  color: #fff;
}

.container {
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  width: 400px;
}

h2 {
  text-align: center;
  margin: 0 0 20px;
}

.form {
  padding: 30px 40px;
}

.form-control {
  margin-bottom: 10px;
  padding-bottom: 20px;
  position: relative;  /* if you want to position something absolute within another element, the parent element has to be relative */
}

.form-control label {
  color: #777;
  display: block;  /* labels are displayed inline by default, with :block they go on their own line and knock next element down */
  margin-bottom: 5px;
}

.form-control input {
  border: 2px solid #f0f0f0;
  border-radius: 4px;
  display: block;   /* it's on it's own line */
  width: 100%;   /* stretches all across container */
  padding: 10px;
  font-size: 14px;
}

.form-control input:focus {
  outline: 0;            /* gets rid of the outline when you click on input */
  border-color: #777;     /* gives color on the outline, when clicked on input */
}

.form-control.success input {
  border-color: var(--success-color);   /* if the input is successful, the border becomes green. We used css variables, look on top of file for :root */
}

.form-control.error input {
  border-color: var(--error-color);   /* if there's an error, the border becomes red. We used css variables, look on top of file for :root */
}

.form-control small {
  color: var(--error-color);     /* red color for error message. We used css variables, look on top of file for :root */
  position: absolute;
  bottom: 0;
  left: 0;
  visibility: hidden;  /* error message is hidden, until we call it with JS */
}

.form-control.error small {
  visibility: visible;   /* in JS when something goes wrong, we add .error class, so it becomes visible */
}

.form button {
  cursor: pointer;   /* cursor becomes pointer when we hover over button */
  background-color: #3498db;
  border: 2px solid #3498db;
  border-radius: 4px;   /* button edges become softer*/
  color: #fff;
  display: block;
  font-size: 16px;
  padding: 10px;
  margin-top: 20px;
  width: 100%;     /* stretches across whole container */
}
